#!/usr/bin/env bash
set -e
function info { echo -e "\e[32m[info] $*\e[39m"; }
function warn  { echo -e "\e[33m[warn] $*\e[39m"; }
function error { echo -e "\e[31m[error] $*\e[39m"; exit 1; }

warn ""
warn "该版本为非官方版本，由ha爱好者维护，如遇到不适配等问题可移步到官方版"
warn "如果你想对自己的系统有更多的控制,请运行"
warn "Home Assistant作为虚拟机或运行Home Assistant Core"
warn "通过Docker容器运行"
warn ""

# Check if we are running on a supported OS
BYPASS_OS_CHECK=${BYPASS_OS_CHECK:-false}
supported_os=("Debian GNU/Linux 11 (bullseye)" "Debian GNU/Linux 12 (bookworm)" "Armbian 23.08.0-trunk bookworm")
armbian_os=("Armbian 23.08.0-trunk bookworm")
CURRENT_OS=$(lsb_release -d | awk -F"\t" '{print $2}')
os_supported=false

for os in "${supported_os[@]}"; do
    if [[ $os == "$CURRENT_OS" ]]; then
        os_supported=true
        break
    fi
done

if [[ $os_supported == false ]]; then
    if [[ $BYPASS_OS_CHECK != "true" ]]; then
        error "${CURRENT_OS} 不受支持!"
    fi
    warn "操作系统检查…"
    warn "${CURRENT_OS} 是不受支持的!"
    warn "请不要报告与此操作系统相关的问题！"
fi

for os in "${armbian_os[@]}"; do
    if [[ $os == "$CURRENT_OS" ]]; then
        warn "正在对uEnv进行操作"
        warn "正在备份原有的uEvn"
        cp /boot/uEnv.txt /boot/uEnv.bak
        echo "apparmor=1 security=apparmor systemd.unified_cgroup_hierarchy=false" >> /boot/uEnv.txt
        sed '4{N;s/\n/ /;}' /boot/uEnv.txt > /boot/temp && mv /boot/temp /boot/uEnv.txt
        warn "正在对os-release进行操作"
        sed -i '1d' /etc/os-release
        sed -i '1 i\PRETTY_NAME="Debian GNU/Linux 12 (bookworm)"' /etc/os-release
        warn "准备工作完成，请在安装完成后重启"
        reboot
        break
    fi
done

# Check if we are running on a supported architecture
ARCH=$(uname -m)
if [[ ! "i386|i686|x86_64|arm|armv6l|armv7l|aarch64" == *"$ARCH"* ]]; then
    error "${ARCH} 不支持!"
fi

# Check if Modem Manager is enabled
if systemctl is-enabled ModemManager.service &> /dev/null; then
    warn "ModemManager 服务已启用。这可能会在使用串口设备时引发问题"
fi

# Check dmesg access
if [[ "$(sysctl --values kernel.dmesg_restrict)" != "0" ]]; then
    info "Fix kernel dmesg restriction"
    echo 0 > /proc/sys/kernel/dmesg_restrict
    echo "kernel.dmesg_restrict=0" >> /etc/sysctl.conf
fi



dpkg-divert --package homeassistant-supervised --add --rename \
    --divert /etc/NetworkManager/NetworkManager.conf.real /etc/NetworkManager/NetworkManager.conf

dpkg-divert --package homeassistant-supervised --add --rename \
    --divert /etc/NetworkManager/system-connections/default.real /etc/NetworkManager/system-connections/default

dpkg-divert --package homeassistant-supervised --add --rename \
    --divert /etc/docker/daemon.json.real /etc/docker/daemon.json

dpkg-divert --package homeassistant-supervised --add --rename \
    --divert /etc/network/interfaces.real /etc/network/interfaces
